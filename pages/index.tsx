import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React from 'react'
import Carousel from '../components/Carousel'
import PrimaryButton from '../components/PrimaryButton'
import SecondaryButton from '../components/SecondaryButton'
import Navbar from '../components/Navbar'
import movies from '../data/movie'
import tvshows from '../data/tvshows'

export default function Home() {
  const [active, setActive] = React.useState(0);
  const [isLoaded, setIsLoaded] = React.useState(true);
  const [mute, setMute] = React.useState(0);
  const [tv, setTv] = React.useState(false);
  const [isPlaying, setIsPlaying] = React.useState(false);
  setTimeout(() => {
    setIsLoaded(false)
  }, 5000);

  const slides = !tv ? movies : tvshows;

  return (
    <React.Fragment>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className="h-[100vh] w-[100vw]">
        {!isPlaying && <iframe
          className={`absolute object-cover h-[100vh] w-[80vw] max-sm:ml-[0vw] max-sm:w-[100vw] max-sm:h-[30vh] max-sm:top-[7vh] ${tv ? 'ml-[0vw]' : 'ml-[20vw]'}`}
          src={`https://www.youtube.com/embed/${slides.filter((slide) => slide.id === active).map((slide) => slide.trailer)}?&controls=0&mute=0&rel=0&autoplay=1`}
          frameBorder={0}
          allow='autoplay'
        ></iframe>}
        {isLoaded && (
          <img
            alt='hero-image'
            className={`absolute object-cover h-[100vh] w-[80vw] max-sm:ml-[0vw] max-sm:w-[100vw] ${tv ? 'ml-[0vw]' : 'ml-[20vw]'}`}
            src={`${slides.filter((slide) => slide.id === active).map((slide) => slide.url)}`}></img>
        )}
        <div
          style={{
            background: `linear-gradient(${tv ? '-90deg' : '90deg'}, rgba(2,0,36,1) 0%, rgba(0,4,45,1) 31%, rgba(0,212,255,0) 100%)`
          }}
          className='absolute max-sm:hidden h-[100vh] w-[100vw] max-sm:h-[107vh] max-sm:bg-gradient-to-t max-sm:from-[#00042d]'>
        </div>
        <div
          style={{
            background: 'linear-gradient(0deg, rgba(2,0,36,1) 0%, rgba(0,4,45,1) 69%, rgba(0,212,255,0) 100%)'
          }}
          className='absolute hidden max-sm:block h-[100vh] w-[100vw] max-sm:h-[107vh] max-sm:bg-gradient-to-t max-sm:from-[#00042d]'>
        </div>
        <Navbar setTv={setTv} tv={tv} />
        <div className='h-[53vh] relative max-md:h-[50vh] max-sm:mt-[15vh] max-sm:h-[58vh]'>
          <div className={`w-[45vw] h-[50vh] absolute bottom-0 px-16 py-5 text-white max-md:w-[50vw] max-sm:w-[100vw] max-sm:px-10 ${tv ? `right-[0vw] pr-5` : ""}`}>
            <h1 className='lg:text-5xl max-md:text-3xl max-sm:text-xl'>
              {slides.filter((slide) => slide.id === active).map((slide) => slide.name)}
            </h1>
            <div className='lg:py-3 max-md:py-1'>
              <span className='lg:text-2xl max-md:text-lg sm:text-sm text-red-900 px-1 max-md:px-0.5'>{slides.filter((slide) => slide.id === active).map((slide) => slide.date)}
              </span>
              <span className='lg:text-2xl max-md:text-lg sm:text-sm px-1 max-md:px-0.5'>|</span>
              <span className='lg:text-2xl max-md:text-lg sm:text-sm px-1 max-md:px-0.5'>
                {slides.filter((slide) => slide.id === active).map((slide) => slide.duration)}
              </span>
            </div>
            <div className='pt-1 flex text-yellow-500'>
              {Array(5).fill(0).map((_, i) => {
                return (
                  <span key={i}>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="lg:w-6 lg:h-6 max-md:w-4 max-md:h-4 h-2 w-2">
                      <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
                    </svg>
                  </span>
                )
              })}
            </div>
            <p className='lg:text-xl max-md:text-lg sm:text-sm py-5 max-md:py-2 max-sm:py-3 max-sm:text-xs'>
              {slides.filter((slide) => slide.id === active).map((slide) => slide.description)}
            </p>
            <div className='flex mt-2 max-md:mt-1 max-sm:mt-3 max-xl:mt-0'>
              <div className='mr-5'>
                <PrimaryButton text={"Play Now"} setIsPlaying={setIsPlaying} />
              </div>
              <SecondaryButton text={"Trailer"} />
            </div>
          </div>
        </div>

        <div
          style={{
            background: 'linear-gradient(0deg, rgba(2,0,36,1) 0%, rgba(0,4,45,1) 69%, rgba(0,212,255,0) 100%)'
          }}
          className='w-full absolute h-[9vh] bottom-0'>
        </div>
        <div className='w-[92vw] mx-auto max-md:w-[95vw] max-md:mt-5 max-sm:mt-0 border max-sm:h-[5vh]'>
          <Carousel setIsPlaying={setIsPlaying} setActive={setActive} slides={slides} setIsLoaded={setIsLoaded} />
        </div>
        {isPlaying && (
          <div className='top-0 absolute h-full w-full z-40'>
            {isPlaying &&
              <span onClick={()=>setIsPlaying(false)} className='absolute top-5 right-5 text-white cursor-pointer'>
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={2} stroke="currentColor" className="w-8 h-8">
                  <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </span>}
            <iframe className='h-full w-full' src={ !tv ? `https://www.2embed.to/embed/imdb/movie?id=${slides.filter((slide) => slide.id === active).map((slide) => slide.imdbId)}` : `https://www.2embed.to/embed/imdb/tv?id=${slides.filter((slide) => slide.id === active).map((slide) => slide.imdbId)}&s=1&e=1`} />
          </div>)}
      </main>
    </React.Fragment>
  )
}
